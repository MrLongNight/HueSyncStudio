  - name: Install system packages
    run: sudo apt-get update && sudo apt-get install -y libasound2-dev libgl1-mesa-dev build-essential cmake git

  - name: Cache vcpkg packages
    uses: actions/cache@v4
    with:
      path: |
        ${{ github.workspace }}/vcpkg/installed
        ${{ github.workspace }}/vcpkg/packages
        ${{ github.workspace }}/vcpkg/buildtrees
        ${{ github.workspace }}/vcpkg/downloads
      key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
      restore-keys: |
        vcpkg-${{ runner.os }}-

  - name: Bootstrap vcpkg
    run: |
      git clone https://github.com/microsoft/vcpkg.git ${{ github.workspace }}/vcpkg
      cd ${{ github.workspace }}/vcpkg
      ./bootstrap-vcpkg.sh -disableMetrics
      ./vcpkg update
    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg

  - name: Install vcpkg manifest dependencies
    run: |
      # Manifest mode: vcpkg.json in repo root will be used automatically
      ${{ github.workspace }}/vcpkg/vcpkg install --triplet x64-linux
    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg

  - name: Configure (Release) with vcpkg toolchain
    run: |
      cmake -B build-release -S . -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

  - name: Build (Release)
    run: cmake --build build-release --parallel

  - name: Run Tests
    run: ctest --test-dir build-release --output-on-failure

  - name: Configure (Lint)
    run: cmake -B build-lint -S . -DCMAKE_BUILD_TYPE=Debug -DENABLE_LINT=ON -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

  - name: Static Analysis (clang-tidy)
    run: cmake --build build-lint --parallel
